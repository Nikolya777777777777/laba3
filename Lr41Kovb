import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Random;
import java.util.Scanner;

public class Lr41Kovb {
    private final HashMap<Integer, String> keyValueMap;

    public Lr41Kovb() {
        keyValueMap = new HashMap<>();
    }

    public void addValue(int key, String value) {
        keyValueMap.put(key, value);
    }

    public void removeValue(String value) {
        if (keyValueMap.containsValue(value)) {
            keyValueMap.values().removeIf(val -> val.equals(value));
            System.out.println("Value '" + value + "' has been successfully removed.");
        } else {
            System.out.println("Value '" + value + "' does not exist in the map.");
        }
    }

    public String getValue(int key) {
        for (Integer k : keyValueMap.keySet()) {
            if (keyValueMap.get(k).equals(key)) {
                return keyValueMap.get(k);
            }
        }
        return null;
    }

    public void print() {
        System.out.println("HashMap:");
        for (Integer key : keyValueMap.keySet()) {
            System.out.println(key + ": " + keyValueMap.get(key));
        }
    }

    private static void printMenu() {
        System.out.println("Menu:");
        System.out.println("1. Add value");
        System.out.println("2. Remove value");
        System.out.println("3. Get value");
        System.out.println("4. Print HashMap");
        System.out.println("5. Exit");
    }

    public static void main(String[] args) {
        Lr41Kovb keyValueStore = new Lr41Kovb();
        Scanner scanner = new Scanner(System.in);

        Random random = new Random(System.currentTimeMillis());
        keyValueStore.addValue(random.nextInt(100), "Kolya");
        keyValueStore.addValue(random.nextInt(100), "Kovbasiuk");
        keyValueStore.addValue(random.nextInt(100), "Kalynivka");
        keyValueStore.addValue(random.nextInt(100), "Kol");
        keyValueStore.addValue(random.nextInt(100), "One");
        keyValueStore.addValue(random.nextInt(100), "Five");
        keyValueStore.addValue(random.nextInt(100), "1");
        keyValueStore.addValue(random.nextInt(100), "2");
        keyValueStore.addValue(random.nextInt(100), "3");
        keyValueStore.addValue(random.nextInt(100), "4");

        String value;
        int key;
        boolean exit = false;
        while (!exit) {
            printMenu();
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("Write value to add: ");
                    value = scanner.nextLine();
                    key = random.nextInt(100);
                    keyValueStore.addValue(key, value);
                    break;
                case 2:
                    System.out.println("Write value to remove: ");
                    value = scanner.nextLine();
                    keyValueStore.removeValue(value);
                    break;
                case 3:
                    System.out.println("Write which key you want to get the value for: ");
                    key = scanner.nextInt();
                    String retrievedValue = keyValueStore.getValue(key);
                    if (retrievedValue != null) {
                        System.out.println("Value for key " + key + ": " + retrievedValue);
                    } else {
                        System.out.println("Key " + key + " does not exist in the map.");
                    }
                    break;
                case 4:
                    keyValueStore.print();
                    break;
                case 5:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a number from 1 to 5.");
            }
        }

        try {
            FileWriter writer = new FileWriter("output.txt", true);
            writer.write("Initial data:\n");
            for (Integer k : keyValueStore.keyValueMap.keySet()) {
                writer.write(k + ": " + keyValueStore.keyValueMap.get(k) + "\n");
            }
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            scanner.close();
        }
    }
}
