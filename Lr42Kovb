import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class Lr42Kovb {
    static class Node {
        int data;
        Node left, right;

        public Node(int data) {
            this.data = data;
            left = right = null;
        }
    }

    static class BinaryTree {
        Node root;

        public BinaryTree() {
            root = null;
        }

        public int sumOfNodes(Node node) {
            if (node == null)
                return 0;

            return node.data + sumOfNodes(node.left) + sumOfNodes(node.right);
        }
        
        public Node add(Node node, int data) {
            if (node == null) {
                return new Node(data);
            }

            if (data < node.data) {
                node.left = add(node.left, data);
            } else if (data > node.data) {
                node.right = add(node.right, data);
            }

            return node;
        }
    }

    private static void printMenu() {
        System.out.println("Menu:");
        System.out.println("1. Add value");
        System.out.println("2. Show sum of all nodes");
        System.out.println("3. Exit");
    }

    public static void main(String[] args) throws IOException {
        BinaryTree tree = new BinaryTree();
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        
        for (int i = 0; i < 10; i++) {
            int randomNumber = random.nextInt(100);
            tree.root = tree.add(tree.root, randomNumber);
        }

        boolean exit = false;
        while (!exit) {
            printMenu();
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("Write value to add: ");
                    int value = scanner.nextInt();
                    tree.root = tree.add(tree.root, value);
                    break;
                case 2:
                    System.out.println("Sum of nodes equal to: " + tree.sumOfNodes(tree.root));
                    break;
                case 3:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a number from 1 to 5.");
            }
        }
        scanner.close();
    }
}
